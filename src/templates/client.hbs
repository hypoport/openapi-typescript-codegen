import { constructExternalUrl } from '@hypoport/ampr-homecloud-common';
import { createContainer } from 'thirty/inject';

{{#each services}}
import { {{{name}}}{{{@root.postfix}}}, {{{lowerCase name}}}{{{@root.postfix}}}Factory } from './services/{{{name}}}{{{@root.postfix}}}';
{{/each}}
import { httpClientFactory } from '../http/http-client';

type ApiServiceOptions = { stage: 'prod' | 'test' | 'int' } | { baseUrl: string };

export class HomecloudApiService {
  {{#each services}}
  readonly {{{lowerCase name}}}Api: {{{name}}}{{{@root.postfix}}};
  {{/each}}
  
  constructor(serviceConfig: ApiServiceOptions) {
    if ('baseUrl' in serviceConfig && 'stage' in serviceConfig) {
      throw new Error('Please provide only baseUrl or stage, not both!');
    }
    const baseUrl = 'baseUrl' in serviceConfig ? serviceConfig.baseUrl : constructExternalUrl(serviceConfig.stage, 'api');
    const config = createContainer({
      baseUrl: () => baseUrl,
      httpClient: httpClientFactory,
      {{#each services}}
      {{{lowerCase name}}}ApiService: {{{lowerCase name}}}{{{@root.postfix}}}Factory,
      {{/each}}
    });

    {{#each services}}
    this.{{{lowerCase name}}}Api = config.{{{lowerCase name}}}{{{@root.postfix}}};
    {{/each}}
  }
}
